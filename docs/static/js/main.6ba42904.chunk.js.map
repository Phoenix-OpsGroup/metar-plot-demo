{"version":3,"sources":["components/SideBar.tsx","components/MetarBar.tsx","components/Display.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Displays","displayControl","Subject","SideBar","className","onClick","setDisplay","size","state","next","display","metarData","MetarBar","metar","id","type","placeholder","value","this","onChange","evt","changeMetar","openTestData","src","target","setState","window","open","focus","Component","Display","subscribe","data","MetarDisplay","metarString","us_metar","un_metar","JSON","stringify","parseMetar","blob1","Blob","rawMetarToSVG","blob2","URL","createObjectURL","setupRender","WindLegend","svg_start","barb1","genWind","wind_speed","wind_direction","barb2","barb3","barb4","barb5","barb6","barb7","barb8","barb9","barb10","barb11","barb12","alt","WeatherLegend","Object","keys","WEATHER","map","wx","svg","getWeatherLegend","text","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ba42904.chunk.js","sourcesContent":["import { FaDesktop, FaWind, FaCloudSun } from 'react-icons/fa'\nimport { Subject } from 'rxjs';\n\nexport const Displays = {\n  METAR: \"metar\",\n  WEATHER: \"weather\",\n  WIND: \"wind\"\n}\n\nexport type DisplayState = { display: string }\nexport const displayControl = new Subject<DisplayState>()\n\nexport default function SideBar() {\n  return (\n    <div className=\"fixed top-0 left-0 h-screen w-16 flex flex-col bg-red-900\">\n      <div className=\"sidebar-icon\" onClick={() => setDisplay(Displays.METAR)}><FaDesktop size=\"28\" /></div>\n      <div className=\"sidebar-icon\" onClick={() => setDisplay(Displays.WEATHER)}><FaWind size=\"28\" /></div>\n      <div className=\"sidebar-icon\" onClick={() => setDisplay(Displays.WIND)}><FaCloudSun size=\"28\" /></div>\n    </div>\n  );\n}\n\nfunction setDisplay(state: string) {\n  displayControl.next({ display: state })\n}\n\n","import React, { Component } from 'react';\nimport { Subject } from 'rxjs';\n\nexport const metarData = new Subject<MetarBarState>()\nexport type MetarBarState = { metar: string }\n\nexport default class MetarBar extends Component<unknown, MetarBarState, unknown>{\n\n  state : MetarBarState = { metar: \"\" }\n\n  render() {\n    return (\n      <form className=\"fixed top-0 h-14 w-full md:flex md:items-center pl-16 mb-6 bg-red-800\">\n        <label className=\"block text-md font-bold pl-8 pr-8 w-1/12 text-gray-200\">\n          Metar\n        </label>\n        <input className=\"shadow appearance-none border rounded w-11/12 py-2 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline mr-2\" \n        id=\"username\" type=\"text\" placeholder=\"KBOS 031754Z 27008KT 10SM SCT050 10/M02 A3015 RMK AO2 SLP207 T01001022 10111 20056 58012\" value={this.state.metar} onChange={evt => this.changeMetar(evt)}></input>\n        <div className=\"w-16 flex content-center justify-center hover:cursor-pointer\" >\n          <img className=\"w-10 h-10\" onClick={this.openTestData} src=\"https://www.aviationweather.gov/images/layout/noaa_logo.png\"/>\n        </div>\n      </form>\n    );\n  }\n\n  private changeMetar(evt: React.ChangeEvent<HTMLInputElement>) {\n    let metar = {metar: evt.target.value}\n    this.setState(metar)\n    metarData.next(metar)\n  }\n\n  private openTestData(){\n    window.open(\"https://www.aviationweather.gov/metar/data?ids=@TOP&format=raw&hours=0&taf=off&layout=on\", \"_blank\")?.focus()\n  }\n}\n\n ","import { Component } from \"react\";\nimport { MetarBarState, metarData } from \"./MetarBar\";\nimport { displayControl, DisplayState, Displays } from \"./SideBar\";\nimport { rawMetarToSVG, parseMetar, getWeatherLegend, WEATHER, genWind, MetarPlot } from \"metar-plot\";\n\nexport default class Display extends Component<unknown, DisplayState, unknown> {\n    state: DisplayState = { display: \"metar\" }\n\n    componentDidMount() {\n        displayControl.subscribe(\n            (data) => {\n                this.setState(data)\n            }\n        )\n    }\n\n    render() {\n        switch (this.state.display) {\n            case Displays.METAR:\n                return (<MetarDisplay></MetarDisplay>)\n            case Displays.WEATHER:\n                return (<WindLegend></WindLegend>)\n            case Displays.WIND:\n                return (<WeatherLegend></WeatherLegend>)\n            default:\n                return (<MetarDisplay></MetarDisplay>)\n        }\n    }\n}\n\nclass MetarDisplay extends Component<unknown, MetarBarState, unknown>{\n\n    state: MetarBarState = { metar: \"KBOS 031754Z 27008KT 10SM SCT050 10/M02 A3015 RMK AO2 SLP207 T01001022 10111 20056 58012\" }\n\n    private metarString: string = \"\";\n    private us_metar: string = \"\";\n    private un_metar: string = \"\";\n\n    componentDidMount() {\n        metarData.subscribe(\n            (data) => {\n                this.setState(data)\n            }\n        )\n    }\n\n    setupRender() {\n        try {\n            this.metarString = JSON.stringify(parseMetar(this.state.metar), null, 3)\n            let blob1 = new Blob([rawMetarToSVG(this.state.metar, \"350px\", \"350px\")], { type: 'image/svg+xml' });\n            let blob2 = new Blob([rawMetarToSVG(this.state.metar, \"350px\", \"350px\", true)], { type: 'image/svg+xml' })\n            this.us_metar = URL.createObjectURL(blob1);\n            this.un_metar = URL.createObjectURL(blob2)\n        } catch {\n            this.metarString = \"Invalid Metar\"\n            this.us_metar = \"\"\n            this.un_metar = \"\"\n        }\n    }\n\n    render() {\n        this.setupRender()\n        return (\n            <div className=\"w-full h-screen pl-16 pt-14\">\n                <div className=\"w-full h-full p-2 dark:bg-gray-500 grid gap-2 grid-cols-2\">\n                    <div className=\"row-span-2 card-base\">\n                        <div className=\"card-banner\">\n                            <span className=\"m-4 align-middle\">Parsed METAR</span>\n                        </div>\n                        <div className=\"card-content\">\n                            <pre className=\"dark:text-gray-200\">\n                                {this.metarString}\n                            </pre>\n                        </div>\n                    </div>\n\n                    <div className=\"card-base\">\n                        <div className=\"card-banner\">\n                            <span className=\"m-4 align-middle\">🇺🇸 METAR</span>\n                        </div>\n                        <div className=\"card-content flex flex-wrap content-center justify-center\">\n                            <img src={this.us_metar} />\n                        </div>\n                    </div>\n\n                    <div className=\"card-base\">\n                        <div className=\"card-banner\">\n                            <span className=\"m-4 align-middle\">🇺🇳 METAR</span>\n                        </div>\n                        <div className=\"card-content flex flex-wrap content-center justify-center\">\n                            <img src={this.un_metar} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass WindLegend extends Component {\n    render() {\n        let svg_start = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"200\\\" height=\\\"200\\\" viewBox=\\\"0 0 500 500\\\">\"\n        let barb1 =URL.createObjectURL(new Blob([ svg_start + genWind({wind_speed: 5, wind_direction: 90})+\"</svg>\"], { type: 'image/svg+xml' })) \n        let barb2 =URL.createObjectURL(new Blob([ svg_start + genWind({wind_speed: 10, wind_direction: 90})+\"</svg>\"], { type: 'image/svg+xml' })) \n        let barb3 =URL.createObjectURL(new Blob([ svg_start + genWind({wind_speed: 15, wind_direction: 90})+\"</svg>\"], { type: 'image/svg+xml' })) \n        let barb4 =URL.createObjectURL(new Blob([ svg_start + genWind({wind_speed: 20, wind_direction: 90})+\"</svg>\"], { type: 'image/svg+xml' })) \n        let barb5 =URL.createObjectURL(new Blob([ svg_start + genWind({wind_speed: 25, wind_direction: 90})+\"</svg>\"], { type: 'image/svg+xml' }))\n        let barb6 =URL.createObjectURL(new Blob([ svg_start + genWind({wind_speed: 30, wind_direction: 90})+\"</svg>\"], { type: 'image/svg+xml' }))\n        let barb7 =URL.createObjectURL(new Blob([ svg_start + genWind({wind_speed: 35, wind_direction: 90})+\"</svg>\"], { type: 'image/svg+xml' }))\n        let barb8 =URL.createObjectURL(new Blob([ svg_start + genWind({wind_speed: 40, wind_direction: 90})+\"</svg>\"], { type: 'image/svg+xml' }))\n        let barb9 =URL.createObjectURL(new Blob([ svg_start + genWind({wind_speed: 45, wind_direction: 90})+\"</svg>\"], { type: 'image/svg+xml' }))\n        let barb10 =URL.createObjectURL(new Blob([ svg_start + genWind({wind_speed: 50, wind_direction: 90})+\"</svg>\"], { type: 'image/svg+xml' }))\n        let barb11 =URL.createObjectURL(new Blob([ svg_start + genWind({wind_speed: 55, wind_direction: 90})+\"</svg>\"], { type: 'image/svg+xml' }))\n        let barb12 =URL.createObjectURL(new Blob([ svg_start + genWind({wind_speed: 60, wind_direction: 90})+\"</svg>\"], { type: 'image/svg+xml' }))\n        return (\n            <div className=\"w-full h-1/3 pl-16 pt-14 dark:bg-gray-500\">\n                <div className=\"card-base m-2\">\n                    <div className=\"card-banner\">\n                        <span className=\"m-4 align-middle\">Wind speed</span>\n                    </div>\n                    <div className=\"card-content flex flex-wrap\">\n                        <div>\n                            <img  src={barb1} alt=\"\"></img>\n                            <div className=\"text-center\">5 Knots</div>\n                        </div>\n                        <div>\n                            <img  src={barb2} alt=\"\"></img>\n                            <div className=\"text-center\">10 Knots</div>\n                        </div>\n                        <div>\n                            <img  src={barb3} alt=\"\"></img>\n                            <div className=\"text-center\">15 Knots</div>\n                        </div>\n                        <div>\n                            <img  src={barb4} alt=\"\"></img>\n                            <div className=\"text-center\"> 20 Knots</div>\n                        </div>\n                        <div>\n                            <img  src={barb5} alt=\"\"></img>\n                            <div className=\"text-center\">25 Knots</div>\n                        </div>\n                        <div>\n                            <img  src={barb6} alt=\"\"></img>\n                            <div className=\"text-center\">30 Knots</div>\n                        </div>\n                        <div>\n                            <img  src={barb7} alt=\"\"></img>\n                            <div className=\"text-center\">35 Knots</div>\n                        </div>\n                        <div>\n                            <img  src={barb8} alt=\"\"></img>\n                            <div className=\"text-center\">40 Knots</div>\n                        </div>\n                        <div>\n                            <img  src={barb9} alt=\"\"></img>\n                            <div className=\"text-center\">45 Knots</div>\n                        </div>\n                        <div>\n                            <img  src={barb10} alt=\"\"></img>\n                            <div className=\"text-center\">50 Knots</div>\n                        </div>\n                        <div>\n                            <img  src={barb11} alt=\"\"></img>\n                            <div className=\"text-center\">55 Knots</div>\n                        </div>\n                        <div>\n                            <img  src={barb12} alt=\"\"></img>\n                            <div className=\"text-center\">60 Knots</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass WeatherLegend extends Component {\n    render() {\n        return (\n            <div className=\"w-full h-screen pl-16 pt-14 dark:bg-gray-500\">\n                <div className=\"card-base p-2\">\n                    <div className=\"card-banner\">\n                        <span className=\"m-4 align-middle\">Weather Symbols</span>\n                    </div>\n                    <div className=\"card-content w-full h-full grid gap-2 p-2 lg:grid-cols-8 md:grid-cols-6 sm:grid-cols-3 overflow-y-scroll\">\n                        {Object.keys(WEATHER).map(\n                            wx => {\n                                const svg = URL.createObjectURL(new Blob([getWeatherLegend(wx)], { type: 'image/svg+xml' }))\n                                return (\n                                    <div className=\"h-full bg-gray-300 rounded-lg\">\n                                        <div className=\"w-full h-1/5 text-center\">{wx}:{WEATHER[wx].text}</div>\n                                        <div className=\"flex flex-wrap content-center h-4/5 justify-center\">\n                                            <img className=\"w-16 h-16\" src={svg} alt=\"\"></img>\n                                        </div>\n                                    </div>\n                                )\n                            }\n                        )\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import SideBar from \"./components/SideBar\"\nimport MetarBar from \"./components/MetarBar\"\nimport Display from './components/Display';\n\nexport default function App() {\n  return (\n    <div>\n      <MetarBar></MetarBar>\n      <SideBar></SideBar>\n      <Display></Display>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}